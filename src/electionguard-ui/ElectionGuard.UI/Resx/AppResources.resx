<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="AddBallots" xml:space="preserve">
    <value>Add Ballots</value>
  </data>
  <data name="AdminHome" xml:space="preserve">
    <value>Admin Home</value>
  </data>
  <data name="AdminHomePageTitle" xml:space="preserve">
    <value>What Do You Want To Do?</value>
  </data>
  <data name="BallotCountText" xml:space="preserve">
    <value>Ballot Count</value>
  </data>
  <data name="BallotsText" xml:space="preserve">
    <value>Ballots</value>
  </data>
  <data name="BallotStylesText" xml:space="preserve">
    <value>Ballot Styles</value>
  </data>
  <data name="CandidatesText" xml:space="preserve">
    <value>Candidates</value>
  </data>
  <data name="ContestsText" xml:space="preserve">
    <value>Contests</value>
  </data>
  <data name="CreatedText" xml:space="preserve">
    <value>Created</value>
  </data>
  <data name="CreateElection" xml:space="preserve">
    <value>Create Election</value>
  </data>
  <data name="CreateTally" xml:space="preserve">
    <value>Create Tally</value>
  </data>
  <data name="ElectionChecklist" xml:space="preserve">
    <value>Election Checklist</value>
  </data>
  <data name="ElectionDetails" xml:space="preserve">
    <value>Election Details</value>
  </data>
  <data name="ElectionGuardTitle" xml:space="preserve">
    <value>ElectionGuard</value>
  </data>
  <data name="ElectionsText" xml:space="preserve">
    <value>Elections</value>
  </data>
  <data name="ElectionUrl" xml:space="preserve">
    <value>Election URL</value>
  </data>
  <data name="GeopoliticalUnitsText" xml:space="preserve">
    <value>Geopolitical Units</value>
  </data>
  <data name="GuardianHome" xml:space="preserve">
    <value>Guardian Home</value>
  </data>
  <data name="GuardiansText" xml:space="preserve">
    <value>Guardians</value>
  </data>
  <data name="HelloWorld" xml:space="preserve">
    <value>Hello, World!</value>
  </data>
  <data name="KeyCeremoniesText" xml:space="preserve">
    <value>Key Ceremonies</value>
  </data>
  <data name="LocationText" xml:space="preserve">
    <value>Location</value>
  </data>
  <data name="LoginPlaceholder" xml:space="preserve">
    <value>Enter your name or other identifier</value>
  </data>
  <data name="LoginText" xml:space="preserve">
    <value>Login</value>
  </data>
  <data name="ManifestText" xml:space="preserve">
    <value>Manifest</value>
  </data>
  <data name="NameText" xml:space="preserve">
    <value>Name</value>
  </data>
  <data name="NoElections" xml:space="preserve">
    <value>No elections found</value>
  </data>
  <data name="NoKeyCeremonies" xml:space="preserve">
    <value>No key ceremonies found</value>
  </data>
  <data name="NoTallies" xml:space="preserve">
    <value>No tallies found</value>
  </data>
  <data name="PartiesText" xml:space="preserve">
    <value>Parties</value>
  </data>
  <data name="QuorumText" xml:space="preserve">
    <value>Quorum</value>
  </data>
  <data name="Settings" xml:space="preserve">
    <value>Settings</value>
  </data>
  <data name="SwitchLanguages" xml:space="preserve">
    <value>Switch Languages</value>
  </data>
  <data name="TalliesText" xml:space="preserve">
    <value>Tallies</value>
  </data>
  <data name="UploadedText" xml:space="preserve">
    <value>Uploaded</value>
  </data>
  <data name="UserID" xml:space="preserve">
    <value>User ID</value>
  </data>
  <data name="UserLogin" xml:space="preserve">
    <value>User Login</value>
  </data>
  <data name="UserSetup" xml:space="preserve">
    <value>User Setup</value>
  </data>
  <data name="WindowTitle" xml:space="preserve">
    <value>ElectionGuard Election Manager</value>
  </data>
  <data name="GoToCreateKeyCeremonyAdmin" xml:space="preserve">
    <value>Create Key Ceremony</value>
  </data>
  <data name="CreateKeyCeremony" xml:space="preserve">
    <value>Create Key Ceremony</value>
  </data>
  <data name="Quorum" xml:space="preserve">
    <value>Quorum</value>
  </data>
  <data name="NumberOfGuardians" xml:space="preserve">
    <value>Number of Guardians</value>
  </data>
  <data name="KeyCeremonyName" xml:space="preserve">
    <value>Key Ceremony Name</value>
  </data>
  <data name="StartCeremony" xml:space="preserve">
    <value>Start Ceremony</value>
  </data>
  <data name="ViewKeyCeremony" xml:space="preserve">
    <value>View Key Ceremony</value>
  </data>
  <data name="Join" xml:space="preserve">
    <value>Join</value>
  </data>
  <data name="AlreadyExists" xml:space="preserve">
    <value>already exists.  Try a different name.</value>
  </data>
  <data name="DatabaseAddress" xml:space="preserve">
    <value>Database IP Address</value>
  </data>
  <data name="DatabasePassword" xml:space="preserve">
    <value>Database Password</value>
  </data>
  <data name="IPAddressPlaceholder" xml:space="preserve">
    <value>IP address of the database</value>
  </data>
  <data name="PasswordDefaultPlaceholder" xml:space="preserve">
    <value>Password to use for the database</value>
  </data>
  <data name="Save" xml:space="preserve">
    <value>Save</value>
  </data>
  <data name="NoGuardians" xml:space="preserve">
    <value>No guardians joined</value>
  </data>
  <data name="Complete" xml:space="preserve">
    <value>Complete</value>
  </data>
  <data name="DoesNotExist" xml:space="preserve">
    <value>Does Not Exist</value>
  </data>
  <data name="KeyCeremonyState" xml:space="preserve">
    <value>Key Ceremony State</value>
  </data>
  <data name="PendingAdminAnnounce" xml:space="preserve">
    <value>Waiting for Admin to Announce the Guardians</value>
  </data>
  <data name="PendingAdminToPublishJointKey" xml:space="preserve">
    <value>Waiting for Admin to Create and Publish the Joint Key</value>
  </data>
  <data name="PendingAdminToShareBackups" xml:space="preserve">
    <value>Waiting for Admin to Share the Election Key Backups</value>
  </data>
  <data name="PendingGuardianBackups" xml:space="preserve">
    <value>Waiting for the Guardians to Backup Election Keys</value>
  </data>
  <data name="PendingGuardianJoin" xml:space="preserve">
    <value>Waiting for Guardians to Join</value>
  </data>
  <data name="PendingGuardiansVerifyBackups" xml:space="preserve">
    <value>Waiting for Guardians to Verify the Backups</value>
  </data>
  <data name="BadVerified" xml:space="preserve">
    <value>Bad Verification</value>
  </data>
  <data name="Verified" xml:space="preserve">
    <value>Verified</value>
  </data>
  <data name="BackupText" xml:space="preserve">
    <value>Backup</value>
  </data>
  <data name="ContactAdmin" xml:space="preserve">
    <value>Contact the election administrator!</value>
  </data>
  <data name="JoinedText" xml:space="preserve">
    <value>Joined</value>
  </data>
  <data name="DatabaseUnavailable" xml:space="preserve">
    <value>Database is not available. Please check your settings.</value>
  </data>
</root>