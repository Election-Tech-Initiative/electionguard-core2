name: Pull Request

on:
  workflow_dispatch:
  pull_request:
    paths:
      - ".github/**"
      - "apps/**"
      - "bindings/**"
      - "include/**"
      - "src/**"
      - "test/**"
    branches: [main]

env:
  TARGET: Release

jobs:
  build_and_test:
    name: ${{ matrix.name }}
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        name:
          [
            "ubuntu-22.04-clang-14.0.0",
            "ubuntu-22.04-gcc-11.3.0",
            "ubuntu-20.04-gcc-10.3.0",
            "ubuntu-20.04-clang-12.0.0",
            "macos-12-xcode-14.1",
            "windows-2022-gcc-11",
            "windows-2022-msvc-latest",
          ]
        include:
          - name: ubuntu-22.04-clang-14.0.0
            os: ubuntu-22.04
            compiler: clang
            version: "14"
          - name: ubuntu-22.04-gcc-11.3.0
            os: ubuntu-22.04
            compiler: gcc
            version: "11"
          - name: ubuntu-20.04-gcc-10.3.0
            os: ubuntu-20.04
            compiler: gcc
            version: "10"
          - name: ubuntu-20.04-clang-12.0.0
            os: ubuntu-20.04
            compiler: clang
            version: "12"
          - name: macOS-12-xcode-14.1
            os: macOS-12
            compiler: xcode
            version: "14.1"
          - name: windows-2022-gcc-11
            os: windows-2022
            compiler: gcc
            version: "11"
          - name: windows-2022-msvc-latest
            os: windows-2022
            compiler: msvc
            version: "latest"

    steps:
      - name: Checkout Code
        uses: actions/checkout@v2
      - name: Change Directory
        run: cd ${{ github.workspace }}
      - name: Install .NET 6
        uses: actions/setup-dotnet@v2
        with:
          dotnet-version: 6.0.x
      - name: Update Environment
        if: runner.os == 'Linux'
        run: |
          sudo apt-get update

          if [ "${{ matrix.compiler }}" = "gcc" ]; then
            echo "CC=gcc-${{ matrix.version }}" >> $GITHUB_ENV
            echo "CXX=g++-${{ matrix.version }}" >> $GITHUB_ENV
          else
            sudo apt-get install -y clang-${{ matrix.version }} g++-multilib
            echo "CC=clang-${{ matrix.version }}" >> $GITHUB_ENV
            echo "CXX=clang++-${{ matrix.version }}" >> $GITHUB_ENV
          fi
      - name: Update Environment
        if: runner.os == 'macOS'
        run: |
          ls -ls /Applications/
          ls -ls $ANDROID_SDK_ROOT/ndk
          sudo xcode-select -switch /Applications/Xcode_${{ matrix.version }}.app
      - name: Update Environment
        if: (runner.os == 'Windows' && matrix.compiler != 'msvc')
        uses: msys2/setup-msys2@v2
        with:
          update: true
          install: mingw-w64-x86_64-gcc
      - name: Configure Environment
        run: make environment
      - name: Run Tests
        if: (runner.os == 'Linux' && matrix.os != 'ubuntu-20.04')
        run: make test
      - name: Run Tests
        if: runner.os == 'macOS'
        run: make test
      - name: Run Tests
        if: (runner.os == 'Windows' && matrix.compiler != 'msvc')
        run: make test
      - name: Run MSVC Tests
        if: (runner.os == 'Windows' && matrix.compiler == 'msvc')
        run: make test-msvc
      - name: Run .Net Tests
        run: make test-netstandard
      - name: Run Benchmarks
        if: (runner.os == 'Linux' || runner.os == 'macOS')
        run: make bench
      - name: Make Release Build
        if: runner.os == 'Linux'
        env:
          NDK_PATH: $$ANDROID_NDK_HOME
        run: |
          make build
          # if [ "${{ matrix.compiler }}" = "clang" ]; then
          #   make build-android
          # fi
      - name: Make Release Build
        if: runner.os == 'macOS'
        env:
          NDK_PATH: $$ANDROID_NDK_HOME
        run: |
          make build
          # make build-android
          # make build-ios
          # make build-netstandard
