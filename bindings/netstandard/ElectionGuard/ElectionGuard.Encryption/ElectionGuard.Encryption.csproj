<Project Sdk="Microsoft.NET.Sdk">

  <PropertyGroup>
    <TargetFrameworks>netstandard2.0;net48</TargetFrameworks>
    <Platforms>arm64;x64;x86</Platforms>

    <!-- Project -->
    <RootNamespace>ElectionGuard</RootNamespace>
    <AssemblyName>ElectionGuard.Encryption</AssemblyName>
    <Version>2.0.0</Version>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyFileVersion>2.0.0.0</AssemblyFileVersion>
  </PropertyGroup>

  <PropertyGroup>

    <!-- Package -->
    <PackageId>ElectionGuard.Encryption</PackageId>
    <Title>ElectionGuard Encryption</Title>
    <Description>Open source implementation of ElectionGuard's ballot encryption.</Description>
    <Authors>Microsoft</Authors>
    <PackageVersion>2.0.0</PackageVersion>
    <PackageLicenseExpression>MIT</PackageLicenseExpression>
    <PackageProjectUrl>https://github.com/microsoft/electionguard-core2</PackageProjectUrl>
    <RepositoryUrl>https://github.com/microsoft/electionguard-core2</RepositoryUrl>
    <PackageTags>Microsoft;Electionguard;Encryption;Windows;MacOS;Linux</PackageTags>
    <PackageReadmeFile>README.md</PackageReadmeFile>
    <PackageIcon>icon.png</PackageIcon>
    <RestoreProjectStyle>PackageReference</RestoreProjectStyle>
    <AutoGenerateBindingRedirects>true</AutoGenerateBindingRedirects>
    <!-- <PackageReleaseNotes>Changelog</PackageReleaseNotes> -->
  </PropertyGroup>

  <PropertyGroup Label="Configuration">
    <Import_RootNamespace>ElectionGuard</Import_RootNamespace>
    <AllowUnsafeBlocks>true</AllowUnsafeBlocks>
  </PropertyGroup>

  <PropertyGroup Label="Debug" Condition=" '$(Configuration)' == 'Debug' ">
    <DebugType>full</DebugType>
    <DebugSymbols>true</DebugSymbols>
    <GenerateDocumentationFile>false</GenerateDocumentationFile>
  </PropertyGroup>

  <PropertyGroup Label="Release" Condition=" '$(Configuration)' == 'Release' ">
    <DebugType>pdbonly</DebugType>
    <GenerateDocumentationFile>true</GenerateDocumentationFile>
    <GeneratePackageOnBuild>true</GeneratePackageOnBuild>
  </PropertyGroup>

  <PropertyGroup Label="Library Paths">
    <ElectionGuardLibs>..\..\..\..\build\libs</ElectionGuardLibs>
  </PropertyGroup>

  <PropertyGroup Condition="'$(Configuration)|$(TargetFramework)|$(Platform)'=='Debug|netstandard2.0|x64'">
    <TreatWarningsAsErrors>True</TreatWarningsAsErrors>
  </PropertyGroup>

  <PropertyGroup Condition="'$(Configuration)|$(TargetFramework)|$(Platform)'=='Release|netstandard2.0|x64'">
    <TreatWarningsAsErrors>True</TreatWarningsAsErrors>
  </PropertyGroup>

  <PropertyGroup Condition="'$(Configuration)|$(TargetFramework)|$(Platform)'=='Debug|net48|x64'">
    <TreatWarningsAsErrors>True</TreatWarningsAsErrors>
  </PropertyGroup>

  <PropertyGroup Condition="'$(Configuration)|$(TargetFramework)|$(Platform)'=='Release|net48|x64'">
    <TreatWarningsAsErrors>True</TreatWarningsAsErrors>
  </PropertyGroup>
  <PropertyGroup Condition=" '$(Configuration)|$(Platform)' == 'Debug|arm64' ">
    <PlatformTarget>anycpu</PlatformTarget>
  </PropertyGroup>
  <ItemGroup Label="C++ Built Libraries">
    <Content Name="Windows" Include="$(ElectionGuardLibs)\Windows\$(Platform)\$(Configuration)\src\$(Configuration)\*.dll*" Pack="true">
      <CopyToOutputDirectory Condition="'$(Platform)' == 'x64' AND '$(OS)' == 'Windows_NT'">Always</CopyToOutputDirectory>
      <PackageCopyToOutput Condition="'$(Platform)' == 'x64' AND '$(OS)' == 'Windows_NT'">true</PackageCopyToOutput>
      <PackagePath>runtimes\win-x64\native</PackagePath>
    </Content>
    <Content Name="Windows HACL" Include="$(ElectionGuardLibs)\Windows\$(Platform)\$(Configuration)\libs\hacl\$(Configuration)\*.dll*" Pack="true">
      <CopyToOutputDirectory Condition="'$(Platform)' == 'x64' AND '$(OS)' == 'Windows_NT'">Always</CopyToOutputDirectory>
      <PackageCopyToOutput Condition="'$(Platform)' == 'x64' AND '$(OS)' == 'Windows_NT'">true</PackageCopyToOutput>
      <PackagePath>runtimes\win-x64\native</PackagePath>
    </Content>
    <Content Name="Windows Symbols" Include="$(ElectionGuardLibs)\Windows\$(Platform)\$(Configuration)\src\$(Configuration)\*.pdb*" Pack="true">
      <CopyToOutputDirectory Condition="'$(Platform)' == 'x64' AND '$(OS)' == 'Windows_NT' AND '$(Configuration)' == 'Debug'">Always</CopyToOutputDirectory>
      <PackageCopyToOutput Condition="'$(Platform)' == 'x64' AND '$(OS)' == 'Windows_NT' AND '$(Configuration)' == 'Debug'">true</PackageCopyToOutput>
    </Content>
    <Content Name="MacOS" Include="$(ElectionGuardLibs)\Darwin\$(Platform)\$(Configuration)\src\*.dylib" Pack="true" PackagePath="runtimes\osx-arm\native">
      <CopyToOutputDirectory>Always</CopyToOutputDirectory>
      <PackageCopyToOutput>true</PackageCopyToOutput>
    </Content>
    <Content Name="Linux" Include="$(ElectionGuardLibs)\Linux\$(Platform)\$(Configuration)\src\*.so" Pack="true" PackagePath="runtimes\linux-x64\native">
      <CopyToOutputDirectory>Always</CopyToOutputDirectory>
      <PackageCopyToOutput>true</PackageCopyToOutput>
    </Content>
    
    <None Include="Electionguard.Encryption.targets">
      <PackagePath>build\</PackagePath>
      <Pack>true</Pack>
    </None>
  </ItemGroup>

  <ItemGroup Label="Additional Package Files">
    <None Name="ReadMe" Include="..\README.md" Pack="true" PackagePath="\" />
    <None Name="Icon" Include="..\icon.png" Pack="true" PackagePath="\" />
  </ItemGroup>

  <ItemGroup>
    <Folder Include="GeneratedInterop\" />
  </ItemGroup>

  <ItemGroup>
    <PackageReference Include="Microsoft.Bcl.HashCode" Version="1.1.1" />
  </ItemGroup>
</Project>
